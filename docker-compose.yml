version: '3.4'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres

  scraper:
    restart: always
    image: scraper
    build:
      context: .
      dockerfile: scraper/Dockerfile
    command: 'npm start'
    environment:
      REDIS_URL: 'redis://cache:6379'
      POSTGRES_HOST: 'postgres'
      # HTTP_PROXY: 'http://proxy:8118'
    depends_on:
      - postgres
      - redis

  # api:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: api/Dockerfile
  #   command: 'npm start'
  #   environment:
  #     POSTGRES_HOST: 'postgres'
  #   depends_on:
  #     - postgres

  api:
    restart: always
    image: postgrest/postgrest
    ports:
      - '8000:8000'
    links:
      - postgres:postgres
    environment:
      PGRST_SERVER_PORT: 8000
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres

  app:
    restart: always
    build:
      context: .
      dockerfile: app/Dockerfile
    command: 'npm start'
    depends_on:
      - api

  redis:
    image: redis
    container_name: cache

  # proxy:
  #   image: zeta0/alpine-tor:latest
  #   environment:
  #     privoxy: 1
  #     tors: 25
  #     new_circuit_period: 10
  #   ports:
  #     - 8118:8118
  #     - 2090:2090

volumes:
  postgres: ~
